# Maintainer: onefire <onefire.myself@gmail.com>
pkgname=nvidia-utils-custom
pkgver=325.15
pkgrel=2
pkgdesc="NVIDIA drivers utilities and libraries. Customized to be compatible with libgl. Use this coupled with my other "custom" packages to have CUDA without bumblebee on laptops."
depends=('xorg-server' 'libxvmc')
optdepends=('gtk2: nvidia-settings' 'pkg-config: nvidia-xconfig' 'opencl-nvidia-custom')
arch=('i686' 'x86_64')
url="http://www.nvidia.com/"
license=('custom')
options=('!strip')
provides=("nvidia-utils=$pkgver")
conflicts=('nvidia-utils' 'nvidia-utils-bumblebee')
groups=('nvidia-cuda' 'custom')

if [ "$CARCH" = "i686" ]; then
	_arch='x86'
	_pkg="NVIDIA-Linux-${_arch}-${pkgver}"
	sha512sums=("48052c3daa8748a7c43de1c24e00fdd3f94cebbe7f5efbb185a0472a1d0bbab8adfe377359ccdc6cd8e437a80506fdd551408237b0842c194a3497c43cf3487e")

elif [ "$CARCH" = "x86_64" ]; then
	_arch='x86_64'
	_pkg="NVIDIA-Linux-${_arch}-${pkgver}-no-compat32"
	sha512sums=("145eb3dd2c1dbce2c718ba7961d15d9e9b6f162bab3bfc2acb157b444478a4175f6e5a083400c6b3bf20606f0889268e4834dd4f7e96ef0ae11d1e170552cf47")
fi

source=("ftp://download.nvidia.com/XFree86/Linux-${_arch}/${pkgver}/${_pkg}.run")

create_links() {
  # create soname links
  while read -d '' _lib; do
    _soname="$(dirname "${_lib}")/$(readelf -d "${_lib}" | sed -nr 's/.*Library soname: \[(.*)\].*/\1/p')"
    [[ -e "${_soname}" ]] || ln -s "$(basename "${_lib}")" "${_soname}"
    [[ -e "${_soname/.[0-9]*/}" ]] || ln -s "$(basename "${_soname}")" "${_soname/.[0-9]*/}"
  done < <(find "${pkgdir}" -type f -name '*.so*' -print0)
}

build() {
  cd "${srcdir}"
  sh "$_pkg.run" --extract-only
}

package() {
  cd "${srcdir}/$_pkg"
  # X driver
  install -D -m755 nvidia_drv.so "${pkgdir}/usr/lib/xorg/modules/drivers/nvidia_drv.so"

  # OpenGL core library
  install -D -m755 "libnvidia-glcore.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-glcore.so.${pkgver}"
  
  # XvMC
  #install -D -m644 libXvMCNVIDIA.a "${pkgdir}/usr/lib/libXvMCNVIDIA.a"
  #install -D -m755 "libXvMCNVIDIA.so.${pkgver}" "${pkgdir}/usr/lib/libXvMCNVIDIA.so.${pkgver}"
 
  # VDPAU
  install -D -m755 "libvdpau_nvidia.so.${pkgver}" "${pkgdir}/usr/lib/vdpau/libvdpau_nvidia.so.${pkgver}"

  # nvidia-tls library
  install -D -m755 "tls/libnvidia-tls.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-tls.so.${pkgver}"
  install -D -m755 "libnvidia-cfg.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-cfg.so.${pkgver}"

  install -D -m755 "libnvidia-ml.so.${pkgver}" "${pkgdir}/usr/lib/libnvidia-ml.so.${pkgver}"

  # CUDA
  install -D -m755 "libcuda.so.${pkgver}" "${pkgdir}/usr/lib/libcuda.so.${pkgver}"
  install -D -m755 "libnvcuvid.so.${pkgver}" "${pkgdir}/usr/lib/libnvcuvid.so.${pkgver}"
  
  # nvidia-xconfig
  install -D -m755 nvidia-xconfig "${pkgdir}/usr/bin/nvidia-xconfig"
  install -D -m644 nvidia-xconfig.1.gz "${pkgdir}/usr/share/man/man1/nvidia-xconfig.1.gz"
 
  # nvidia-settings
  install -D -m755 nvidia-settings "${pkgdir}/usr/bin/nvidia-settings"
  install -D -m644 nvidia-settings.1.gz "${pkgdir}/usr/share/man/man1/nvidia-settings.1.gz"
  install -D -m644 nvidia-settings.desktop "${pkgdir}/usr/share/applications/nvidia-settings.desktop"
  install -D -m644 nvidia-settings.png "${pkgdir}/usr/share/pixmaps/nvidia-settings.png"
  sed -e 's:__UTILS_PATH__:/usr/bin:' -e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' -i "${pkgdir}/usr/share/applications/nvidia-settings.desktop"
  
  # nvidia-bug-report
  install -D -m755 nvidia-bug-report.sh "${pkgdir}/usr/bin/nvidia-bug-report.sh"

  # nvidia-smi
  install -D -m755 nvidia-smi "${pkgdir}/usr/bin/nvidia-smi"
  install -D -m644 nvidia-smi.1.gz "${pkgdir}/usr/share/man/man1/nvidia-smi.1.gz"

  # license
  install -D -m644 LICENSE "${pkgdir}/usr/share/licenses/nvidia/LICENSE"
  ln -s nvidia "${pkgdir}/usr/share/licenses/nvidia-utils"
   
  # docs
  install -D -m644 README.txt "${pkgdir}/usr/share/doc/nvidia/README"
  install -D -m644 NVIDIA_Changelog "${pkgdir}/usr/share/doc/nvidia/NVIDIA_Changelog"
  ln -s nvidia "${pkgdir}/usr/share/doc/nvidia-utils"

  create_links
}
